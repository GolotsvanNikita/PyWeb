# ООП
class Point :      # Оголошення класу - прийнято з великої літери     
    x = 0          # поле класу - за замовчанням public
    y = 0          # та static - єдине для всіх об'єктів  

    def __init__(self) :      # Конструктор класу - спец.метод __init__          
        self.x = 0.0          # На відміну від більшості мов, у яких this - неявний параметр
        self.y = 0.0          # у Python він передається явно, першим параметром методів
                              #  і традиційно називається self
    def set_xy(self, x, y) :  # При виклику буде доступно лише два параметри                 
        self.x = x            #  p1.set_xy(1, 2)
        self.y = y            # перший зв'язується автоматично



def main() :                    # 
    Point.x = 10                # 
    p1 = Point()                # створення об'єкта - без new
    print(p1.x, p1.y, Point.x)  # p1.x - знаходить статичне поле
    p1.x = 20                   # дана інструкція створює об'єктне поле
    print(p1.x, p1.y, Point.x)  # p1.x - об'єктний, p1.y - статичний
    p2 = Point()                # 
    print(p2.x, p2.y, Point.x)  # 
    del p1.x                    # Видалення об'єктного поля
    print(p1.x, p1.y, Point.x)  # тепер p1.x - знов статичне
    p1.set_xy(1, 2)
    print(p1.x, p1.y, Point.x)  #
# поля в об'єктах можуть створюватись та видалятись під час роботи
# за відсутності об'єктного поля здійснюється пошук статичного поля

if __name__ == '__main__' :
    main()

'''
Д.З. Оголосити клас для роботи з числовими дробами
(чисельник та знаменник)
Створити конструктор, який забезпечує початкові значення:
чисельник 0, знаменник 1, а також дозволяє встановлювати 
передані значення.
Створити методи
set_numerator(x) - чисельник
set_denominator(y) - знаменник
set_nd(x,y) - обидва

У головній ф-ції створити декілька об'єктів, вивести їх на екран
'''